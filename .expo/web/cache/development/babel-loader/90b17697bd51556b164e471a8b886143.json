{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\Code\\\\Cursos\\\\NativeMax\\\\rn-elements\\\\src\\\\Components\\\\TodoList.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ImageEditor } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AddInput } from \"./input\";\nexport function TodoList() {\n  var _this = this;\n\n  var _useState = useState(['primero', 'segundo']),\n      _useState2 = _slicedToArray(_useState, 2),\n      list = _useState2[0],\n      setList = _useState2[1];\n\n  var updateList = function updateList(newList) {\n    setList(function (prevState) {\n      return prevState.concat(newList);\n    });\n  };\n\n  var handlePress = function handlePress(clickedItem) {\n    var newList = list.filter(function (item) {\n      return item != clickedItem;\n    });\n    setList(function (prev) {\n      return newList;\n    });\n  };\n\n  var onPressInit = function onPressInit() {\n    setList(function () {\n      return ['primero'];\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(AddInput, {\n    updateList: updateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: list,\n    renderItem: function renderItem(item) {\n      return React.createElement(Text, {\n        onPress: function onPress() {\n          return handlePress(item.item);\n        },\n        name: item.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, item.item);\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: onPressInit,\n    title: \"Init\",\n    color: \"#841584\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/usuario/Desktop/Code/Cursos/NativeMax/rn-elements/src/Components/TodoList.js"],"names":["StatusBar","React","useState","ImageEditor","AddInput","TodoList","list","setList","updateList","newList","prevState","concat","handlePress","clickedItem","filter","item","prev","onPressInit","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;SACyDC,W;;AAEzD,SAASC,QAAT;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,kBAAwBH,QAAQ,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AAC9BF,IAAAA,OAAO,CAAC,UAAAG,SAAS;AAAA,aAAIA,SAAS,CAACC,MAAV,CAAiBF,OAAjB,CAAJ;AAAA,KAAV,CAAP;AACD,GAFD;;AAGA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,WAAW,EAAI;AACjC,QAAMJ,OAAO,GAAGH,IAAI,CAACQ,MAAL,CAAY,UAAAC,IAAI;AAAA,aAAIA,IAAI,IAAIF,WAAZ;AAAA,KAAhB,CAAhB;AACAN,IAAAA,OAAO,CAAC,UAAAS,IAAI;AAAA,aAAIP,OAAJ;AAAA,KAAL,CAAP;AACD,GAHD;;AAIA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBV,IAAAA,OAAO,CAAC;AAAA,aAAM,CAAC,SAAD,CAAN;AAAA,KAAD,CAAP;AACD,GAFD;;AAGA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEW,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAEX,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,UAAU,EAAE,oBAAAS,IAAI;AAAA,aACd,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE;AAAA,iBAAMH,WAAW,CAACG,IAAI,CAACA,IAAN,CAAjB;AAAA,SAAf;AAA6C,QAAA,IAAI,EAAEA,IAAI,CAACA,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACA,IADR,CADc;AAAA,KAFlB;AAOE,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEE,WADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAkBE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD;AAED,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE;AALH;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Text, View, FlatList, ImageEditor, Button } from 'react-native';\n\nimport { AddInput } from './input';\n\nexport function TodoList() {\n  const [list, setList] = useState(['primero', 'segundo']);\n  const updateList = (newList) => {\n    setList(prevState => prevState.concat(newList));\n  }\n  const handlePress = clickedItem => {\n    const newList = list.filter(item => item != clickedItem);\n    setList(prev => newList);\n  }\n  const onPressInit = () => {\n    setList(() => ['primero'])\n  }\n  return (\n    <SafeAreaView style={styles.container}>\n      <AddInput\n        updateList={updateList}\n      />\n      <FlatList\n        data={list}\n        renderItem={item => (\n          <Text onPress={() => handlePress(item.item)} name={item.item}>\n            {item.item}\n          </Text>\n        )}\n        keyExtractor={item => item}\n      />\n      <Button\n        onPress={onPressInit}\n        title=\"Init\"\n        color=\"#841584\"\n      />\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}